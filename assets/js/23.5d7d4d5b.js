(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{342:function(a,t,s){"use strict";s.r(t);var e=s(25),r=Object(e.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h2",{attrs:{id:"什么是neo4j"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是neo4j"}},[a._v("#")]),a._v(" 什么是Neo4j")]),a._v(" "),t("h3",{attrs:{id:"节点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#节点"}},[a._v("#")]),a._v(" 节点")]),a._v(" "),t("p",[a._v("节点（或顶点）是图中的圆。节点通常代表物体、实体或单纯的事物")]),a._v(" "),t("h4",{attrs:{id:"标签-label"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#标签-label"}},[a._v("#")]),a._v(" 标签 Label")]),a._v(" "),t("p",[a._v("在节点上添加标签，就表示该节点属于图中的一个节点子集。 标签在 Neo4j 中非常重要，因为它们为 Cypher 语句提供了一个起点")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://graphacademy.neo4j.com/courses/neo4j-fundamentals/2-property-graphs/1-property-graph/images/node-labels.jpg",alt:"Nodes with labels"}})]),a._v(" "),t("h4",{attrs:{id:"属性-properties"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#属性-properties"}},[a._v("#")]),a._v(" 属性 Properties")]),a._v(" "),t("p",[a._v("属性是键、值对，可根据需要从节点中添加或删除。 属性值可以是单个值，也可以是符合 Cypher 类型系统的值列表")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://graphacademy.neo4j.com/courses/neo4j-fundamentals/2-property-graphs/1-property-graph/images/node-properties.jpg",alt:"Nodes with properties"}})]),a._v(" "),t("h3",{attrs:{id:"关系"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#关系"}},[a._v("#")]),a._v(" 关系")]),a._v(" "),t("p",[a._v("关系（或边）用于连接节点。我们可以使用关系来描述节点之间的连接方式")]),a._v(" "),t("h4",{attrs:{id:"方向-direction"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#方向-direction"}},[a._v("#")]),a._v(" 方向 Direction")]),a._v(" "),t("p",[a._v("在 Neo4j 中，每个关系在图中都必须有一个方向。 虽然这个方向是必须的，但关系可以在任何一个方向上查询，也可以在查询时完全忽略")]),a._v(" "),t("h4",{attrs:{id:"类型-type"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#类型-type"}},[a._v("#")]),a._v(" 类型 Type")]),a._v(" "),t("p",[a._v("Neo4j 图形中的每个关系都必须有一个类型。 这样，我们就可以在查询时选择要遍历图的哪一部分")]),a._v(" "),t("h4",{attrs:{id:"属性-properties-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#属性-properties-2"}},[a._v("#")]),a._v(" 属性 Properties")]),a._v(" "),t("p",[a._v("与节点一样，关系也可以具有属性。 这些属性可以是加权图中的成本或距离，也可以只是为关系提供额外的上下文")]),a._v(" "),t("h2",{attrs:{id:"为什么用neo4j"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#为什么用neo4j"}},[a._v("#")]),a._v(" 为什么用Neo4j")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("Neo4j 是一个"),t("strong",[a._v("原生图数据库")]),a._v("，这意味着从数据存储到查询语言的所有设计都考虑到了遍历。在类似多跳查询的场景有非常高的查询效率")])]),a._v(" "),t("li",[t("p",[a._v("与其他企业 DBMS 一样，Neo4j 也符合 ACID 标准。 事务中的一组修改要么全部提交，要么全部失败")])]),a._v(" "),t("li",[t("p",[a._v("免索引邻接")])])]),a._v(" "),t("h2",{attrs:{id:"免索引邻接-index-free-adjacency"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#免索引邻接-index-free-adjacency"}},[a._v("#")]),a._v(" 免索引邻接（Index-Free Adjacency）")]),a._v(" "),t("p",[a._v("免索引邻接（Index-Free Adjacency） 是一种数据存储和查询优化技术，主要用于图数据库（Graph Database）中。与传统的关系型数据库不同，图数据库通过节点（Node）和边（Edge）来表示实体及其关系。免索引邻接的核心思想是将相邻节点的引用直接存储在节点本身中，而不是依赖于全局索引来查找关联数据")]),a._v(" "),t("h3",{attrs:{id:"工作原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#工作原理"}},[a._v("#")]),a._v(" 工作原理")]),a._v(" "),t("p",[a._v("在免索引邻接模型中，每个节点都包含对其相邻节点的直接引用（通常是内存地址或指针）。这意味着当需要访问某个节点的邻居时，可以直接通过这些引用快速定位到相关节点，而无需进行复杂的索引查找操作")]),a._v(" "),t("h3",{attrs:{id:"数据结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据结构"}},[a._v("#")]),a._v(" 数据结构")]),a._v(" "),t("p",[a._v("常见的实现方式包括：")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("链表：每个节点维护一个指向其相邻节点的链表")])]),a._v(" "),t("li",[t("p",[a._v("数组：使用数组或列表来存储相邻节点的引用")])]),a._v(" "),t("li",[t("p",[a._v("哈希表：对于稀疏图，可以使用哈希表来存储相邻节点的引用，以提高查找效率")])])]),a._v(" "),t("h3",{attrs:{id:"概念图"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#概念图"}},[a._v("#")]),a._v(" 概念图")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://graphacademy.neo4j.com/courses/neo4j-fundamentals/2-property-graphs/2-native-graph/images/IFA-1-new.png",alt:"IFA-1-new"}})]),a._v(" "),t("p",[t("img",{attrs:{src:"https://graphacademy.neo4j.com/courses/neo4j-fundamentals/2-property-graphs/2-native-graph/images/IFA-2-new.png",alt:"IFA-2-new"}})]),a._v(" "),t("div",{staticClass:"language-cypher extra-class"},[t("pre",{pre:!0,attrs:{class:"language-cypher"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("MATCH")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<--")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Group")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<--")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Group")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<--")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Group")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("id"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("RETURN")]),a._v(" n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("id\n")])])]),t("p",[t("img",{attrs:{src:"https://graphacademy.neo4j.com/courses/neo4j-fundamentals/2-property-graphs/2-native-graph/images/IFA-3-new.png",alt:"IFA-3-new"}})]),a._v(" "),t("h3",{attrs:{id:"优点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#优点"}},[a._v("#")]),a._v(" 优点")]),a._v(" "),t("h4",{attrs:{id:"高效的遍历性能"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#高效的遍历性能"}},[a._v("#")]),a._v(" 高效的遍历性能")]),a._v(" "),t("p",[a._v("由于不需要通过索引查找相邻节点，免索引邻接大大提高了图遍历的速度。特别是在深度优先搜索（DFS）、广度优先搜索（BFS）等算法中，能够显著减少查询延迟")]),a._v(" "),t("h4",{attrs:{id:"减少索引开销"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#减少索引开销"}},[a._v("#")]),a._v(" 减少索引开销")]),a._v(" "),t("p",[a._v("传统的关系型数据库需要为每种关系类型创建索引，这会占用大量的存储空间并增加写入操作的复杂性。免索引邻接避免了这些问题，减少了索引维护的开销")]),a._v(" "),t("h4",{attrs:{id:"简化查询逻辑"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#简化查询逻辑"}},[a._v("#")]),a._v(" 简化查询逻辑")]),a._v(" "),t("p",[a._v("查询逻辑变得更加直观和简单。开发者可以直接通过节点的引用访问相邻节点，而无需编写复杂的 SQL 查询语句或处理多表连接")]),a._v(" "),t("h3",{attrs:{id:"缺点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#缺点"}},[a._v("#")]),a._v(" 缺点")]),a._v(" "),t("h4",{attrs:{id:"内存占用较高"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#内存占用较高"}},[a._v("#")]),a._v(" 内存占用较高")]),a._v(" "),t("p",[a._v("由于每个节点都需要存储其相邻节点的引用，这可能会导致较大的内存开销，尤其是在图非常稠密的情况下")]),a._v(" "),t("h4",{attrs:{id:"不适合频繁更新的场景"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#不适合频繁更新的场景"}},[a._v("#")]),a._v(" 不适合频繁更新的场景")]),a._v(" "),t("p",[a._v("如果图结构频繁变化（如节点和边的增删），维护这些直接引用会变得复杂且耗时。每次修改图结构时，都需要更新相关节点的引用信息")]),a._v(" "),t("h2",{attrs:{id:"neo4j内存模型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#neo4j内存模型"}},[a._v("#")]),a._v(" Neo4j内存模型")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://neo4j.com/docs/operations-manual/current/_images/neo4j-memory-management.svg",alt:"image.png"}}),a._v("\n一台专门部署Neo4j的机器可以把内存分为几块：")]),a._v(" "),t("ul",[t("li",[a._v("OS内存")]),a._v(" "),t("li",[a._v("Neo4j堆内存")]),a._v(" "),t("li",[a._v("Neo4j堆外内存（直接内存）")])]),a._v(" "),t("h3",{attrs:{id:"堆外内存"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#堆外内存"}},[a._v("#")]),a._v(" 堆外内存")]),a._v(" "),t("p",[a._v("堆外内存是 Neo4j 直接从操作系统分配的内存。这种内存会根据需要动态增长，不受垃圾回收器的影响")]),a._v(" "),t("h3",{attrs:{id:"页缓存"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#页缓存"}},[a._v("#")]),a._v(" 页缓存")]),a._v(" "),t("p",[a._v("页面缓存用于缓存存储在磁盘上的 Neo4j 数据。将图形数据和索引缓存到内存中有助于避免昂贵的磁盘访问，从而获得最佳性能\n指定 Neo4j 允许页面缓存使用多少内存的参数是："),t("code",[a._v("server.memory.pagecache.size")])]),a._v(" "),t("p",[a._v("推荐阅读：")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("https://neo4j.com/docs/operations-manual/current/performance/memory-configuration/")])]),a._v(" "),t("li",[t("p",[a._v("https://neo4j.com/developer/kb/understanding-memory-consumption/")])])]),a._v(" "),t("h2",{attrs:{id:"参考"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[a._v("#")]),a._v(" 参考")]),a._v(" "),t("p",[a._v("https://graphacademy.neo4j.com/courses/neo4j-fundamentals")])])}),[],!1,null,null,null);t.default=r.exports}}]);